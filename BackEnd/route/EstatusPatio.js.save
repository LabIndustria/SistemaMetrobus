const path = require('path')
const express = require("express")
const patio = express.Router()
const cors = require("cors")
const jwt = require("jsonwebtoken")
const bcrypt = require("bcryptjs")
var pdf = require("pdf-creator-node");
var fs = require('fs');

var options = {
    format: "Letter"
}

var pdfName = ""

const Patio = require('../Models/EstatusPatio.js')
patio.use(cors())

process.env.SECRET_KEY = 'secret'

patio.post('/patio',async (req, res) => {
    const today = new Date().toJSON()
    const formData = {
        NumeroEconomico: req.body.NumeroEconomico,
        Estatus: req.body.Estatus,
        Sistema: req.body.Sistema,
        Descripciondefalla: req.body.Descripciondefalla,
        Kilometraje: req.body.Kilometraje,
        Fechadeingreso: req.body.Fechadeingreso,
        Fechadeliberacion: null
    }
    Patio.findOne({
        where: { 
          NumeroEconomico: req.body.NumeroEconomico
        }
    })
    .then(patio => {
        if (!patio) {
            Patio.create(formData)
            .then(patio => {
                console.log("Registrado.")
                res.send({ status: 'Registrado!' })
            })
            .catch(err => {
                console.log(err)
                res.send('error: ' + err)
            })
        } else {
            res.json({ error: 'El numero economico ya existe' })
        }
    })
    .catch(err => {
        console.log(err)
      res.send('error: ' + err)
    })
})

patio.post('/patioPDF', (req,res) => {
console.log(new Date(req.body.Fechadeliberacion.replace('-','/')))
    Patio.findAll({
        where: {
         //   Fechadeingreso: req.body.Fechadeliberacion.replace('-','/')
	Fechadeingreso: "2021-05-23"        
}
    })
    .then(obj=>{
        var html = fs.readFileSync( path.join(__dirname, '../Documents/Templates/EstatusPatio.html'),'utf-8');
        var options = {
		    phantomPath: path.resolve(
    process.cwd(),
    "node_modules/phantomjs/bin/phantomjs"
  ),
                    format: "A3",
                    orientation: "portrait",
                    border: "0mm",
                    header: {
                        height: "0mm",
                        contents: '<div style="text-align: center;"></div>'
                    },
                    "footer": {
                        "height": "0mm",
                        "contents": {
                            first: ' ',
                            default: '<span style="color: #444;">{{page}}</span>/<span>{{pages}}</span>', // fallback value
                            last: ' '
                        }
                    }
                };
        var patios=[]       
        
                
        for(const valor in obj){
            var objeto = {
                NumeroEconomico: obj[valor].NumeroEconomico,
                Estatus: obj[valor].Estatus,
                Sistema: obj[valor].Sistema,
                Descripciondefalla: obj[valor].Descripciondefalla,
                Kilometraje: obj[valor].Kilometraje,
                Fechadeingreso: obj[valor].Fechadeingreso,
		Fechadeliberacion: obj[valor].Fechadeliberacion
            }
            patios.push(objeto)
        }
        let mesesArray = ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"]
        let fecha = new Date(req.body.Fechadeliberacion)
        let año = fecha.getFullYear()
        let mes = mesesArray[parseInt(fecha.getMonth())]
        let dia = fecha.getDate()
        let fechas = dia + " de " + mes + " del " + año

        var document = {
            html: html,
            data: {
                users: patios,
                Fecha: fechas
            },
            path:  path.join(__dirname, '../Documents/EstatusPatio/EstatusPatio') + req.body.Fechadeliberacion + ".pdf"
        }
        pdfName = "EstatusPatio"+ req.body.Fechadeliberacion +".pdf"
	console.log("HOLA: " +pdfName)
        pdf.create(document,options)
        .then(res => {
            //res.send(Promise.reject());
            console.log("Creado.")
        })
        .catch(error => {
            //res.send(Promise.resolve());
            console.log(error)
        })
        console.log(obj)
        res.send({success:true, data:obj});
    })
    .catch(err=>{
        console.log(err)
        res.send({success:false, message:err});
    })
})

patio.get('/fetch-pdf', async(req,res) => {
	console.log(req.query.PDF)
    var pdfName = req.query.PDF+".pdf"
    console.log(pdfName)
    var aux = path.join(__dirname,'../', 'Documents/EstatusPatio/', pdfName)
    console.log(aux)
    res.sendFile(aux)
})

patio.post('/get_liberacion', (req,res) => {
    Patio.findAll({
    where: {
        Fechadeliberacion: null
        } 
    })
    .then(obj=>{
        res.send({success:true, data:obj});
    })
    .catch(err=>{
        res.send({success:false, message:err});
    })
})

patio.post('/UpdateLiberacion', (req,res) =>
{
    const patioData = {
        NumeroEconomico: req.body.NumeroEconomico,
        Estatus: req.body.Estatus,
        Sistema: req.body.Sistema,
        Descripciondefalla: req.body.Descripciondefalla,
        Kilometraje: req.body.Kilometraje,
        Fechadeingreso: req.body.Fechadeingreso,
        Fechadeliberacion: req.body.Fechadeliberacion
    }
    Patio.findOne({
        where: {
          NumeroEconomico: req.body.NumeroEconomico,
          Fechadeingreso: req.body.Fechadeingreso
        }
    })
    .then(patio => {
      if(patio) {
            Patio.update({Fechadeliberacion: req.body.Fechadeliberacion}, {where: {NumeroEconomico: patioData.NumeroEconomico}})
            .then(patio => {
              res.send({status:"success",data:patioData})
            })
            .catch(err => {
              res.send('error: ' + err)
            })
      } else {
        res.send({ error: 'El usuario no existe' })
      }
    })
    .catch(err => {
      res.send('error: ' + err)
    })
})

module.exports = patio

